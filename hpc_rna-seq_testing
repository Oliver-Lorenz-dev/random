#!/usr/bin/env Rscript

# DESeq2 differential gene expression analysis code

library(BiocManager)
library(DESeq2)
library(readr)
library(dplyr)
library(magrittr)
library(tximport)

# read in run table
run_table = read_csv('/nfs/pathogen002/ol6/RNA-seq-Chris/run_table.txt')

# select relevant samples from run_table
run_table_17_18 = filter(run_table, p_value == '17/18')
run_table_10_11 = filter(run_table, p_value == '10/11')

# use dplyr full_join to merge filtered dfs
run_table_10_11_17_18 = full_join(run_table_10_11,run_table_17_18)

# count files for tximport
sample_ids = pull(run_table_10_11_17_18, Index)
count_files = paste0('/nfs/pathogen002/ol6/RNA-seq-Chris/',sample_ids, '/quant.sf')

# read in mapped transcripts file
transcripts_mapped = read_csv('./gene_map.csv',
                              col_names = c("Gene_ID","Transcript_ID"))

# read in read count data using tximport
count_data = tximport(files = count_files, type='salmon',
                          ignoreTxVersion = TRUE, tx2gene = transcripts_mapped)

# import data into DESeq2
deseq_data = DESeqDataSetFromTximport(txi = count_data, colData =
                                      run_table_10_11_17_18, design = ~p_value)

# run DESeq2 analysis on data
dds = DESeq(deseq_data)

# get results
dds_results = results(dds , contrast = c("p_value","10/11","17/18"))

# check each gene for differential expression
dds_results$dif_exp = dds_results$padj < 0.05 & abs(dds_results$log2FoldChange) > 1
dds_dif_exp_results = data.frame(dds_results)

# check each gene for differential expression
dds_results$dif_exp = dds_results$padj < 0.05 & abs(dds_results$log2FoldChange) > 1
dds_dif_exp_results = data.frame(dds_results)

# use dplyr to filter dataframe for differentially expressed genes only
dds_dif_exp_results = filter(dds_dif_exp_results, padj < 0.05)
dds_dif_exp_results = filter(dds_dif_exp_results, abs(log2FoldChange) > 1)

# add gene ID to dataframe
dds_dif_exp_results$Gene_ID = rownames(dds_dif_exp_results)

# extract list of differentially expressed genes
gene_list_dif_exp = dds_dif_exp_results$Gene_ID
gene_list_df = data.frame(gene_list_dif_exp)
lfc_filtered = dds_dif_exp_results$log2FoldChange
gene_lfc = data.frame(gene_list_dif_exp, lfc_filtered)

# save DEGS to CSV
row.names(gene_lfc) = NULL
write.csv(x=gene_lfc, file='DEGS.csv', row.names = FALSE)

# MA plot
plotMA(dds , alpha = 0.01, main = "Test MA plot")

# PCA plot
dds_var_transform = varianceStabilizingTransformation(deseq_data)
plotPCA(dds_var_transform , intgroup = 'p_value')
